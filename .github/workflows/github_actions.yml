name: CI/CD Pipeline
on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      # steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
      #   with:
      #     limit-access-to-actor: true
      #     limit-access-to-actors: Albe6089
      #     upterm-server: wss://YOUR_HEROKU_APP_URL
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-secret-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
          key: ${{ secrets.SSH_PUBLIC_KEY }}

      # - name: executing remote ssh commands using ssh key
      #   uses: Albe6089/remote-exec@main
      #   with:
      #     host: ${{ secrets.HOST }}
      #     user: ${{ secrets.USER }}
      #     port: ${{ secrets.PORT }}
      #     key: ${{ secrets.SSH_PUBLIC_KEY }}
      #     script: whoami

      # - name: Run playbook
      #   uses: dawidd6/action-ansible-playbook@v2
      #   with:
      #     playbook: user_add.yml
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     directory: ./
      #     inventory: |
      #       [bastion]
      #       bastion_host ansible_host=ubuntu@54.68.248.93
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init
      # Checks that all Terraform configuration files adhere to a canonical format#
      - name: Terraform Format
        run: terraform fmt -check
      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan
      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: user_add.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          directory: ./
          inventory: |
            [bastion]
            bastion_host ansible_host=ubuntu@54.68.248.93
